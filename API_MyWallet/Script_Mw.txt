CREATE DATABASE db_myWalletUpdt;

use db_myWalletUpdt;

-- TABELAS ----------------------------------------------

CREATE TABLE tb_usuario(
    id int primary key auto_increment,
    nome varchar(250),
    email varchar (250),
    telefone varchar (250),
    nascimento date,
  	cep varchar(250)
);

INSERT INTO tb_usuario(nome, email, telefone, nascimento, cep) VALUES("Matheus", "matheus@gmail.com", "(21)97536-2567", 2001-06-06, "24753-110");

CREATE TABLE tb_conta(
    id int primary key auto_increment,
    nomeUsuario varchar(150),
    senha varchar(150),
  	id_usuario int
);

INSERT INTO tb_conta(nomeUsuario, senha, id_usuario) VALUES("Maths", "12345", 1);

CREATE TABLE tb_carteira(
  	id int primary key auto_increment,
  	nomeCarteira varchar(150),
  	dinheiro double,
  	id_conta int,
  	id_cartao int
);

INSERT INTO tb_carteira(nomeCarteira, dinheiro, id_conta, id_cartao) VALUES("casa", 150, 1, 1);

CREATE TABLE tb_movimentacao(
	id int primary key auto_increment,
  	dataMovimentacao date,
  	dinheiro double,
  	id_tipo int,
  	id_carteira int,
  	id_conta int,
  	id_cartao int
);

INSERT INTO tb_movimentacao(dataMovimentacao, dinheiro, id_tipo, id_carteira, id_conta, id_cartao) VALUES(01-12-2022, 150, 1, 2, 1, 1);

CREATE TABLE tb_tiposTransacao(
	id int primary key auto_increment,
  	descricao varchar(150)
);

INSERT INTO tb_tiposTransacao(descricao) VALUES("Depósito");
INSERT INTO tb_tiposTransacao(descricao) VALUES("Saque");


CREATE TABLE tb_lista(
	id int primary key auto_increment,
  	conteudo varchar(150),
  	dinheiro double,
  	id_conta int, 
  	id_carteira int,
  	id_cartao int
);

INSERT INTO tb_lista(conteudo, dinheiro, id_conta, id_carteira, id_cartao) VALUES("batata", 10, 1, 2, 1);

CREATE TABLE tb_cartao(
	id int primary key auto_increment,
  	banco varchar(250),
  	id_conta int
);

INSERT INTO tb_cartao(banco, id_conta) VALUES("Nubank", 1)

-- FAZER A CONEXÃO DAS CHAVES ESTRANGEIRAS COM A TB_MOVIMENTACOES -------------------------------------------------------
ALTER TABLE tb_movimentacao ADD CONSTRAINT fk_tipoM FOREIGN KEY(id_tipo) REFERENCES tb_tiposTransacao(id) ON DELETE CASCADE;
ALTER TABLE tb_movimentacao ADD CONSTRAINT fk_contaM FOREIGN KEY(id_conta) REFERENCES tb_conta(id) ON DELETE CASCADE;
ALTER TABLE tb_movimentacao ADD CONSTRAINT fk_carteiraM FOREIGN KEY(id_carteira) REFERENCES tb_carteira(id) ON DELETE CASCADE;
ALTER TABLE tb_movimentacao ADD CONSTRAINT fk_cartaoM FOREIGN KEY(id_cartao) REFERENCES tb_cartao(id) ON DELETE CASCADE;


-- FAZER A CONEXÃO DAS CHAVES ESTRANGEIRAS COM A TB_CARTEIRAS -------------------------------------------------------
ALTER TABLE tb_carteira ADD CONSTRAINT fk_contaC FOREIGN KEY(id_conta) REFERENCES tb_conta(id) ON DELETE CASCADE;
ALTER TABLE tb_carteira ADD CONSTRAINT fk_cartaoC FOREIGN KEY(id_cartao) REFERENCES tb_cartao(id) ON DELETE CASCADE;


-- FAZER A CONEXÃO DAS CHAVES ESTRANGEIRAS COM A TB_LISTAS -------------------------------------------------------
ALTER TABLE tb_lista ADD CONSTRAINT fk_contaL FOREIGN KEY(id_conta) REFERENCES tb_conta(id) ON DELETE CASCADE;
ALTER TABLE tb_lista ADD CONSTRAINT fk_carteiraL FOREIGN KEY(id_carteira) REFERENCES tb_carteira(id) ON DELETE CASCADE;
ALTER TABLE tb_lista ADD CONSTRAINT fk_cartaoL FOREIGN KEY(id_cartao) REFERENCES tb_cartao(id) ON DELETE CASCADE;


-- FAZER A CONEXÃO DAS CHAVES ESTRANGEIRAS COM A TB_CARTOES -------------------------------------------------------
ALTER TABLE tb_cartao ADD CONSTRAINT fk_contaCt FOREIGN KEY(id_conta) REFERENCES tb_conta(id) ON DELETE CASCADE;


-- SELECTS -------------------------------------------------------
SELECT * FROM tb_carteiras;
SELECT * FROM tb_cartoes;
SELECT * FROM tb_conta;
SELECT * FROM tb_usuarios;
SELECT * FROM tb_listas;
SELECT * FROM tb_movimentacoes;
SELECT * FROM tb_tipoTransacoes;

-- DROPS -------------------------------------------------------
DROP DATABASE db_myWalletUpdt;
DROP TABLE tb_carteiras;
DROP TABLE tb_cartoes;
DROP TABLE tb_conta;
DROP TABLE tb_usuarios;
DROP TABLE tb_listas;
DROP TABLE tb_movimentacoes;
DROP TABLE tb_tipoTransacoes;

-- SELECT COM JOINS -------------------------------------------------------


SELECT D.dinheiro , N.nome, T.descricao FROM tb_movimentacao D INNER JOIN tb_users N ON U.id = M.id_user
																   INNER JOIN tb_typeMovi T ON T.id = M.id_type 
                                                                   WHERE T.id = 2;
                                                                   
SELECT M.money, M.moviDate, U.personName, T.description FROM tb_movimentation M INNER JOIN tb_users U ON U.id = M.id_user 
																			 INNER JOIN tb_typeMovi T ON T.id = M.id_type 
                                                                             WHERE id_user = 4;










